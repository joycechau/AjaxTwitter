{"version":3,"sources":["webpack/bootstrap 86e6c707e7365ea22d02","./frontend/twitter.js","./frontend/follow_toggle.js","./frontend/api_util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,IAAG;AACH,EAAC;;;;;;;ACND;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;;;;;;ACzCA;AACA;;AAEA;;AAEA;AACA;AACA,sBAAqB,GAAG;AACxB;AACA;AACA,MAAK;;AAEL;AACA;;;AAGA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 86e6c707e7365ea22d02","let FollowToggle = require (\"./follow_toggle.js\");\n\n$(function() {\n  $(\"button.follow-toggle\").each((index, element) => {\n    new FollowToggle(element);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/twitter.js\n// module id = 0\n// module chunks = 0","const apiUtil = require (\"./api_util.js\");\n\nclass FollowToggle {\n  constructor(el) {\n    this.$el = $(el);\n\n    this.userId = this.$el.data(\"user-id\");\n    this.followState = this.$el.data(\"initial-follow-state\");\n    this.render();\n\n    this.$el.on(\"click\", event => {\n      this.handleClick(event);\n    });\n  }\n\n  render() {\n    this.$el.text(this.followState === \"unfollowed\" ? \"Follow!\" : \"Unfollow!\");\n  }\n\n  toggleButton() {\n    this.followState = (this.followState === \"unfollowed\") ? \"follow\" : \"unfollowed\";\n    this.render();\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.$el.text(\"pending\");\n    this.$el.prop(\"disabled\", true);\n    let request;\n    if (this.followState === \"unfollowed\") {\n      request = apiUtil.followUser(this.userId);\n    } else {\n      request = apiUtil.unfollowUser(this.userId);\n    }\n    request.then(() => {\n      this.toggleButton();\n      this.$el.prop(\"disabled\", false);\n    });\n  }\n}\n\nmodule.exports = FollowToggle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/follow_toggle.js\n// module id = 1\n// module chunks = 0","const APIUtil = {\n  followUser: id => APIUtil.updateFollowing(id, \"POST\"),\n\n  unfollowUser: id => APIUtil.updateFollowing(id, \"DELETE\"),\n\n  updateFollowing: (id, method) => {\n    return $.ajax({\n      url: `/users/${id}/follow`,\n      dataType: \"json\",\n      method\n    });\n\n  }\n};\n\n\nmodule.exports = APIUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/api_util.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}